buildscript {
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.4.2.RELEASE'
//        classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:3.1.1'
//        classpath 'org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:1.4.2'
        classpath 'net.saliman:gradle-cobertura-plugin:2.5.0'
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.5"
    }
    repositories {
        mavenCentral()
    }
}

plugins {
    id 'scala'
}

repositories {
    mavenCentral()
}

group = 'com.myorg.samplespringboot'
version = '1.0.0'
description = """Sample Spring Boot Service"""

apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'
apply plugin: 'checkstyle'
apply plugin: 'cobertura'
apply plugin: 'findbugs'
apply plugin: "org.sonarqube"

checkstyle {
    toolVersion = '8.3'
    showViolations = true
    configFile = new File('google_check_style.xml')
//    maxWarnings = 100
}

cobertura {
    coverageFormats = ['html', 'xml']
    coverageIgnoreTrivial = true
    coverageIgnores = ['org.slf4j.Logger.*',]
    coverageReportDir = new File("$buildDir/reports/cobertura")
    coverageExcludes = ['.*org.slf4j.Logger.*']
//    coverageCheckPackageLineRate = 100;
//    coverageCheckTotalLineRate = 100;
//    coverageCheckHaltOnFailure = true;
    coverageTestTasks {
        project.tasks.withType(Test).matching {
            it.name.contains("test")
        }
    }
}

findbugs {
    ignoreFailures = false
    toolVersion = "3.0.1"
    sourceSets = [sourceSets.main]
    reportsDir = file("$project.buildDir/reports/findbugs")
    effort = "max"
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

configurations.all {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-aop'
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-jdbc'
    exclude group: 'org.springframework', module: 'spring-aspects'
    exclude group: 'org.apache.tomcat', module: 'tomcat-jdbc'
    exclude group: 'org.mapstruct', module: 'mapstruct'
    exclude group: 'javax.activation', module: 'activation'
}

dependencies {
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '1.4.2.RELEASE')
    compile(group: 'io.springfox', name: 'springfox-swagger2', version: '2.6.1')
    compile(group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.6.1')
    compile(group: 'org.springframework', name: 'spring-context-support', version: '4.3.8.RELEASE')
    compile files('libs/PerfMotor-1.0.0.jar')
}

test.finalizedBy(project.tasks.cobertura)
